window.JSCompiler_renameProperty=function(e){return e};let dedupeId=0;const dedupingMixin=function(e){function t(t){let i=t.__mixinSet;if(i&&i[a])return t;let s=n,r=s.get(t);r||(r=e(t),s.set(t,r));let o=Object.create(r.__mixinSet||i||null);return o[a]=!0,r.__mixinSet=o,r}let n=e.__mixinApplications;n||(n=new WeakMap,e.__mixinApplications=n);let a=dedupeId++;return t};let microtaskCurrHandle=0,microtaskLastHandle=0,microtaskCallbacks=[],microtaskNodeContent=0,microtaskNode=document.createTextNode('');new window.MutationObserver(microtaskFlush).observe(microtaskNode,{characterData:!0});function microtaskFlush(){const e=microtaskCallbacks.length;for(let t,n=0;n<e;n++)if(t=microtaskCallbacks[n],t)try{t()}catch(t){setTimeout(()=>{throw t})}microtaskCallbacks.splice(0,e),microtaskLastHandle+=e}const microTask={run(e){return microtaskNode.textContent=microtaskNodeContent++,microtaskCallbacks.push(e),microtaskCurrHandle++},cancel(e){const t=e-microtaskLastHandle;if(0<=t){if(!microtaskCallbacks[t])throw new Error('invalid async handle: '+e);microtaskCallbacks[t]=null}}},microtask=microTask,PropertiesChanged=dedupingMixin(e=>{return class extends e{static createProperties(e){const t=this.prototype;for(let n in e)n in t||t._createPropertyAccessor(n)}static attributeNameForProperty(e){return e.toLowerCase()}static typeForProperty(){}_createPropertyAccessor(e,t){this._addPropertyToAttributeMap(e),this.hasOwnProperty('__dataHasAccessor')||(this.__dataHasAccessor=Object.assign({},this.__dataHasAccessor)),this.__dataHasAccessor[e]||(this.__dataHasAccessor[e]=!0,this._definePropertyAccessor(e,t))}_addPropertyToAttributeMap(e){if(this.hasOwnProperty('__dataAttributes')||(this.__dataAttributes=Object.assign({},this.__dataAttributes)),!this.__dataAttributes[e]){const t=this.constructor.attributeNameForProperty(e);this.__dataAttributes[t]=e}}_definePropertyAccessor(e,t){Object.defineProperty(this,e,{get(){return this._getProperty(e)},set:t?function(){}:function(t){this._setProperty(e,t)}})}constructor(){super(),this.__dataEnabled=!1,this.__dataReady=!1,this.__dataInvalid=!1,this.__data={},this.__dataPending=null,this.__dataOld=null,this.__dataInstanceProps=null,this.__serializing=!1,this._initializeProperties()}ready(){this.__dataReady=!0,this._flushProperties()}_initializeProperties(){for(let e in this.__dataHasAccessor)this.hasOwnProperty(e)&&(this.__dataInstanceProps=this.__dataInstanceProps||{},this.__dataInstanceProps[e]=this[e],delete this[e])}_initializeInstanceProperties(e){Object.assign(this,e)}_setProperty(e,t){this._setPendingProperty(e,t)&&this._invalidateProperties()}_getProperty(e){return this.__data[e]}_setPendingProperty(e,t){let n=this.__data[e],a=this._shouldPropertyChange(e,t,n);return a&&(!this.__dataPending&&(this.__dataPending={},this.__dataOld={}),this.__dataOld&&!(e in this.__dataOld)&&(this.__dataOld[e]=n),this.__data[e]=t,this.__dataPending[e]=t),a}_invalidateProperties(){!this.__dataInvalid&&this.__dataReady&&(this.__dataInvalid=!0,microtask.run(()=>{this.__dataInvalid&&(this.__dataInvalid=!1,this._flushProperties())}))}_enableProperties(){this.__dataEnabled||(this.__dataEnabled=!0,this.__dataInstanceProps&&(this._initializeInstanceProperties(this.__dataInstanceProps),this.__dataInstanceProps=null),this.ready())}_flushProperties(){const e=this.__data,t=this.__dataPending,n=this.__dataOld;this._shouldPropertiesChange(e,t,n)&&(this.__dataPending=null,this.__dataOld=null,this._propertiesChanged(e,t,n))}_shouldPropertiesChange(e,t){return!!t}_propertiesChanged(){}_shouldPropertyChange(e,t,n){return n!==t&&(n===n||t===t)}attributeChangedCallback(e,t,n,a){t!==n&&this._attributeToProperty(e,n),super.attributeChangedCallback&&super.attributeChangedCallback(e,t,n,a)}_attributeToProperty(e,t,n){if(!this.__serializing){const a=this.__dataAttributes,i=a&&a[e]||e;this[i]=this._deserializeValue(t,n||this.constructor.typeForProperty(i))}}_propertyToAttribute(e,t,n){this.__serializing=!0,n=3>arguments.length?this[e]:n,this._valueToNodeAttribute(this,n,t||this.constructor.attributeNameForProperty(e)),this.__serializing=!1}_valueToNodeAttribute(e,t,n){const a=this._serializeValue(t);a===void 0?e.removeAttribute(n):e.setAttribute(n,a)}_serializeValue(e){switch(typeof e){case'boolean':return e?'':void 0;default:return null==e?void 0:e.toString();}}_deserializeValue(e,t){return t===Boolean?null!==e:t===Number?+e:e}}});function normalizeProperties(e){const t={};for(let n in e){const a=e[n];t[n]='function'==typeof a?{type:a}:a}return t}const PropertiesMixin=dedupingMixin(e=>{function t(e){const t=Object.getPrototypeOf(e);return t.prototype instanceof i?t:null}function n(e){if(!e.hasOwnProperty(JSCompiler_renameProperty('__ownProperties',e))){let t=null;e.hasOwnProperty(JSCompiler_renameProperty('properties',e))&&e.properties&&(t=normalizeProperties(e.properties)),e.__ownProperties=t}return e.__ownProperties}const a=PropertiesChanged(e);class i extends a{static get observedAttributes(){const e=this._properties;return e?Object.keys(e).map(e=>this.attributeNameForProperty(e)):[]}static finalize(){if(!this.hasOwnProperty(JSCompiler_renameProperty('__finalized',this))){const e=t(this);e&&e.finalize(),this.__finalized=!0,this._finalizeClass()}}static _finalizeClass(){const e=n(this);e&&this.createProperties(e)}static get _properties(){if(!this.hasOwnProperty(JSCompiler_renameProperty('__properties',this))){const e=t(this);this.__properties=Object.assign({},e&&e._properties,n(this))}return this.__properties}static typeForProperty(e){const t=this._properties[e];return t&&t.type}_initializeProperties(){this.constructor.finalize(),super._initializeProperties()}connectedCallback(){super.connectedCallback&&super.connectedCallback(),this._enableProperties()}disconnectedCallback(){super.disconnectedCallback&&super.disconnectedCallback()}}return i}),templateCaches=new Map;class TemplateResult{constructor(e,t,n,a=defaultPartCallback){this.strings=e,this.values=t,this.type=n,this.partCallback=a}getHTML(){const e=this.strings.length-1;let t='',n=!0;for(let a=0;a<e;a++){const e=this.strings[a];t+=e;const i=findTagClose(e);n=-1<i?i<e.length:n,t+=n?nodeMarker:marker}return t+=this.strings[e],t}getTemplateElement(){const e=document.createElement('template');return e.innerHTML=this.getHTML(),e}}const marker=`{{lit-${(Math.random()+'').slice(2)}}}`,nodeMarker=`<!--${marker}-->`,markerRegex=new RegExp(`${marker}|${nodeMarker}`),lastAttributeNameRegex=/[ \x09\x0a\x0c\x0d]([^\0-\x1F\x7F-\x9F \x09\x0a\x0c\x0d"'>=/]+)[ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*)$/;function findTagClose(e){const t=e.lastIndexOf('>'),n=e.indexOf('<',t+1);return-1<n?e.length:t}class TemplatePart{constructor(e,t,n,a,i){this.type=e,this.index=t,this.name=n,this.rawName=a,this.strings=i}}const isTemplatePartActive=e=>-1!==e.index;class Template{constructor(e,t){this.parts=[],this.element=t;const n=this.element.content,a=document.createTreeWalker(n,133,null,!1);let s=-1,i=0;const r=[];for(let n,o;a.nextNode();){s++,n=o;const t=o=a.currentNode;if(1===t.nodeType){if(!t.hasAttributes())continue;const n=t.attributes;let a=0;for(let e=0;e<n.length;e++)0<=n[e].value.indexOf(marker)&&a++;for(;0<a--;){const a=e.strings[i],r=lastAttributeNameRegex.exec(a)[1],o=n.getNamedItem(r),l=o.value.split(markerRegex);this.parts.push(new TemplatePart('attribute',s,o.name,r,l)),t.removeAttribute(o.name),i+=l.length-1}}else if(3===t.nodeType){const e=t.nodeValue;if(0>e.indexOf(marker))continue;const n=t.parentNode,a=e.split(markerRegex),o=a.length-1;i+=o;for(let e=0;e<o;e++)n.insertBefore(''===a[e]?document.createComment(''):document.createTextNode(a[e]),t),this.parts.push(new TemplatePart('node',s++));n.insertBefore(''===a[o]?document.createComment(''):document.createTextNode(a[o]),t),r.push(t)}else if(8===t.nodeType&&t.nodeValue===marker){const e=t.parentNode,a=t.previousSibling;null===a||a!==n||a.nodeType!==Node.TEXT_NODE?e.insertBefore(document.createComment(''),t):s--,this.parts.push(new TemplatePart('node',s++)),r.push(t),null===t.nextSibling?e.insertBefore(document.createComment(''),t):s--,o=n,i++}}for(const a of r)a.parentNode.removeChild(a)}}const getValue=(e,t)=>isDirective(t)?(t=t(e),noChange):null===t?void 0:t,isDirective=e=>'function'==typeof e&&!0===e.__litDirective,noChange={},isPrimitiveValue=e=>null===e||'object'!=typeof e&&'function'!=typeof e;class AttributePart{constructor(e,t,n,a){this.instance=e,this.element=t,this.name=n,this.strings=a,this.size=a.length-1,this._previousValues=[]}_interpolate(e,t){const n=this.strings,a=n.length-1;let s='';for(let r=0;r<a;r++){s+=n[r];const a=getValue(this,e[t+r]);if(a&&a!==noChange&&(Array.isArray(a)||'string'!=typeof a&&a[Symbol.iterator]))for(const e of a)s+=e;else s+=a}return s+n[a]}_equalToPreviousValues(e,t){for(let n=t;n<t+this.size;n++)if(this._previousValues[n]!==e[n]||!isPrimitiveValue(e[n]))return!1;return!0}setValue(e,t){if(this._equalToPreviousValues(e,t))return;const n=this.strings;let a;2===n.length&&''===n[0]&&''===n[1]?(a=getValue(this,e[t]),Array.isArray(a)&&(a=a.join(''))):a=this._interpolate(e,t),a!==noChange&&this.element.setAttribute(this.name,a),this._previousValues=e}}class NodePart{constructor(e,t,n){this.instance=e,this.startNode=t,this.endNode=n,this._previousValue=void 0}setValue(e){if(e=getValue(this,e),e!==noChange)if(isPrimitiveValue(e)){if(e===this._previousValue)return;this._setText(e)}else e instanceof TemplateResult?this._setTemplateResult(e):Array.isArray(e)||e[Symbol.iterator]?this._setIterable(e):e instanceof Node?this._setNode(e):void 0===e.then?this._setText(e):this._setPromise(e)}_insert(e){this.endNode.parentNode.insertBefore(e,this.endNode)}_setNode(e){this._previousValue===e||(this.clear(),this._insert(e),this._previousValue=e)}_setText(e){const t=this.startNode.nextSibling;e=e===void 0?'':e,t===this.endNode.previousSibling&&t.nodeType===Node.TEXT_NODE?t.textContent=e:this._setNode(document.createTextNode(e)),this._previousValue=e}_setTemplateResult(e){const t=this.instance._getTemplate(e);let n;this._previousValue&&this._previousValue.template===t?n=this._previousValue:(n=new TemplateInstance(t,this.instance._partCallback,this.instance._getTemplate),this._setNode(n._clone()),this._previousValue=n),n.update(e.values)}_setIterable(e){Array.isArray(this._previousValue)||(this.clear(),this._previousValue=[]);const t=this._previousValue;let n=0;for(const a of e){let e=t[n];if(e===void 0){let a=this.startNode;if(0<n){const e=t[n-1];a=e.endNode=document.createTextNode(''),this._insert(a)}e=new NodePart(this.instance,a,this.endNode),t.push(e)}e.setValue(a),n++}if(0==n)this.clear(),this._previousValue=void 0;else if(n<t.length){const e=t[n-1];t.length=n,this.clear(e.endNode.previousSibling),e.endNode=this.endNode}}_setPromise(e){this._previousValue=e,e.then(t=>{this._previousValue===e&&this.setValue(t)})}clear(e=this.startNode){removeNodes(this.startNode.parentNode,e.nextSibling,this.endNode)}}const defaultPartCallback=(e,t,n)=>{if('attribute'===t.type)return new AttributePart(e,n,t.name,t.strings);if('node'===t.type)return new NodePart(e,n,n.nextSibling);throw new Error(`Unknown part type ${t.type}`)};class TemplateInstance{constructor(e,t,n){this._parts=[],this.template=e,this._partCallback=t,this._getTemplate=n}update(e){let t=0;for(const n of this._parts)n?void 0===n.size?(n.setValue(e[t]),t++):(n.setValue(e,t),t+=n.size):t++}_clone(){const e=this.template.element.content.cloneNode(!0),t=this.template.parts;if(0<t.length){const n=document.createTreeWalker(e,133,null,!1);let a=-1;for(let e=0;e<t.length;e++){const i=t[e],s=isTemplatePartActive(i);if(s)for(;a<i.index;)a++,n.nextNode();this._parts.push(s?this._partCallback(this,i,n.currentNode):void 0)}}return e}}const removeNodes=(e,t,n=null)=>{for(let a=t;a!==n;){const t=a.nextSibling;e.removeChild(a),a=t}},walkerNodeFilter=NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_COMMENT|NodeFilter.SHOW_TEXT;function removeNodesFromTemplate(e,t){const{element:{content:a},parts:n}=e,i=document.createTreeWalker(a,walkerNodeFilter,null,!1);let s=0,r=n[0],o=-1,l=0;const d=[];for(let a=null;i.nextNode();){o++;const e=i.currentNode;for(e.previousSibling===a&&(a=null),t.has(e)&&(d.push(e),null===a&&(a=e)),null!==a&&l++;r!==void 0&&r.index===o;)r.index=null===a?r.index-l:-1,r=n[++s]}d.forEach(e=>e.parentNode.removeChild(e))}const countNodes=e=>{let t=1;for(const n=document.createTreeWalker(e,walkerNodeFilter,null,!1);n.nextNode();)t++;return t},nextActiveIndexInTemplateParts=(e,t=-1)=>{for(let n=t+1;n<e.length;n++){const t=e[n];if(isTemplatePartActive(t))return n}return-1};function insertNodeIntoTemplate(e,t,n=null){const{element:{content:i},parts:a}=e;if(null===n||void 0===n)return void i.appendChild(t);const s=document.createTreeWalker(i,walkerNodeFilter,null,!1);for(let i=nextActiveIndexInTemplateParts(a),r=0,o=-1;s.nextNode();){o++;const e=s.currentNode;for(e===n&&(n.parentNode.insertBefore(t,n),r=countNodes(t));-1!==i&&a[i].index===o;){if(0<r){for(;-1!==i;)a[i].index+=r,i=nextActiveIndexInTemplateParts(a,i);return}i=nextActiveIndexInTemplateParts(a,i)}}}const getTemplateCacheKey=(e,t)=>`${e}--${t}`,shadyTemplateFactory=e=>t=>{const n=getTemplateCacheKey(t.type,e);let a=templateCaches.get(n);a===void 0&&(a=new Map,templateCaches.set(n,a));let i=a.get(t.strings);if(i===void 0){const n=t.getTemplateElement();'object'==typeof window.ShadyCSS&&window.ShadyCSS.prepareTemplateDom(n,e),i=new Template(t,n),a.set(t.strings,i)}return i},TEMPLATE_TYPES=['html','svg'];function removeStylesFromLitTemplates(e){TEMPLATE_TYPES.forEach(t=>{const n=templateCaches.get(getTemplateCacheKey(t,e));n!==void 0&&n.forEach(e=>{const{element:{content:t}}=e,n=t.querySelectorAll('style');removeNodesFromTemplate(e,new Set(Array.from(n)))})})}const shadyRenderSet=new Set,ensureStylesScoped=(e,t,n)=>{if(!shadyRenderSet.has(n)){shadyRenderSet.add(n);const a=document.createElement('template');if(Array.from(e.querySelectorAll('style')).forEach(e=>{a.content.appendChild(e)}),window.ShadyCSS.prepareTemplateStyles(a,n),removeStylesFromLitTemplates(n),window.ShadyCSS.nativeShadow){const n=a.content.querySelector('style');null!==n&&(e.insertBefore(n,e.firstChild),insertNodeIntoTemplate(t,n.cloneNode(!0),t.element.content.firstChild))}}};function render$1(e,t,n){const a=shadyTemplateFactory(n),i=a(e);let s=t.__templateInstance;if(void 0!==s&&s.template===i&&s._partCallback===e.partCallback)return void s.update(e.values);s=new TemplateInstance(i,e.partCallback,a),t.__templateInstance=s;const r=s._clone();s.update(e.values);const o=t instanceof ShadowRoot?t.host:void 0;o!==void 0&&'object'==typeof window.ShadyCSS&&(ensureStylesScoped(r,i,n),window.ShadyCSS.styleElement(o)),removeNodes(t,t.firstChild),t.appendChild(r)}const html$1=(e,...t)=>new TemplateResult(e,t,'html',extendedPartCallback),extendedPartCallback=(e,t,n)=>{if('attribute'===t.type){if('on-'===t.rawName.substr(0,3)){const a=t.rawName.slice(3);return new EventPart(e,n,a)}const a=t.name.substr(t.name.length-1);if('$'===a){const a=t.name.slice(0,-1);return new AttributePart(e,n,a,t.strings)}if('?'===a){const a=t.name.slice(0,-1);return new BooleanAttributePart(e,n,a,t.strings)}return new PropertyPart(e,n,t.rawName,t.strings)}return defaultPartCallback(e,t,n)};class BooleanAttributePart extends AttributePart{setValue(e,t){const n=this.strings;if(2===n.length&&''===n[0]&&''===n[1]){const n=getValue(this,e[t]);if(n===noChange)return;n?this.element.setAttribute(this.name,''):this.element.removeAttribute(this.name)}else throw new Error('boolean attributes can only contain a single expression')}}class PropertyPart extends AttributePart{setValue(e,t){const n=this.strings;let a;this._equalToPreviousValues(e,t)||(a=2===n.length&&''===n[0]&&''===n[1]?getValue(this,e[t]):this._interpolate(e,t),a!==noChange&&(this.element[this.name]=a),this._previousValues=e)}}class EventPart{constructor(e,t,n){this.instance=e,this.element=t,this.eventName=n}setValue(e){const t=getValue(this,e);t===this._listener||(null==t?this.element.removeEventListener(this.eventName,this):null==this._listener&&this.element.addEventListener(this.eventName,this),this._listener=t)}handleEvent(e){'function'==typeof this._listener?this._listener.call(this.element,e):'function'==typeof this._listener.handleEvent&&this._listener.handleEvent(e)}}class LitElement extends PropertiesMixin(HTMLElement){constructor(){super(...arguments),this.__renderComplete=null,this.__resolveRenderComplete=null,this.__isInvalid=!1,this.__isChanging=!1}ready(){this._root=this._createRoot(),super.ready(),this._firstRendered()}connectedCallback(){window.ShadyCSS&&this._root&&window.ShadyCSS.styleElement(this),super.connectedCallback()}_firstRendered(){}_createRoot(){return this.attachShadow({mode:'open'})}_shouldPropertiesChange(e,t,n){const a=this._shouldRender(e,t,n);return!a&&this.__resolveRenderComplete&&this.__resolveRenderComplete(!1),a}_shouldRender(){return!0}_propertiesChanged(e,t,n){super._propertiesChanged(e,t,n);const a=this._render(e);a&&this._root!==void 0&&this._applyRender(a,this._root),this._didRender(e,t,n),this.__resolveRenderComplete&&this.__resolveRenderComplete(!0)}_flushProperties(){this.__isChanging=!0,this.__isInvalid=!1,super._flushProperties(),this.__isChanging=!1}_shouldPropertyChange(e,t,n){const a=super._shouldPropertyChange(e,t,n);return a&&this.__isChanging&&console.trace(`Setting properties in response to other properties changing `+`considered harmful. Setting '${e}' from `+`'${this._getProperty(e)}' to '${t}'.`),a}_render(){throw new Error('_render() not implemented')}_applyRender(e,t){render$1(e,t,this.localName)}_didRender(){}requestRender(){this._invalidateProperties()}_invalidateProperties(){this.__isInvalid=!0,super._invalidateProperties()}get renderComplete(){return this.__renderComplete||(this.__renderComplete=new Promise(e=>{this.__resolveRenderComplete=t=>{this.__resolveRenderComplete=this.__renderComplete=null,e(t)}}),!this.__isInvalid&&this.__resolveRenderComplete&&Promise.resolve().then(()=>this.__resolveRenderComplete(!1))),this.__renderComplete}}const _$={};class AnElement extends LitElement{$(t){if(!_$[t]){const n=this.shadowRoot.querySelector(`#${t}`);n&&(_$[t]=n)}return _$[t]}$$(e){return this.shadowRoot.querySelector(e)}fireEvent(e,t){this.dispatchEvent(new CustomEvent(e,{bubbles:!0,composed:!0,detail:t}))}}async function draw(e,t,n,a,i){var s=Math.floor;t=t||15,n=n||110;const r=cv.imread(e),o=new cv.Mat;if(cv.cvtColor(r,o,cv.COLOR_RGBA2GRAY),a){const e=new cv.Size(8,8),t=new cv.CLAHE(40,e);t.apply(o,o),t.delete()}cv.threshold(o,o,n,255,i?cv.THRESH_BINARY_INV:cv.THRESH_BINARY);const l=new cv.MatVector,d=new cv.Mat;cv.findContours(o,l,d,cv.RETR_TREE,cv.CHAIN_APPROX_SIMPLE);const p=[];for(let s=0;s<l.size();++s){const e=l.get(s),t=cv.contourArea(e,!1);if(t){const e=cv.Mat.zeros(o.rows,o.cols,cv.CV_8UC1);cv.drawContours(e,l,s,new cv.Scalar(255,255,255),-1);const n=cv.mean(r,e);e.delete(),p.push({index:s,area:t,color:n})}e.delete()}p.sort((e,t)=>t.area-e.area),p.length>t&&p.splice(t),p.sort((e,t)=>e.index-t.index);const f=[];for(const r of p){let e='';const t=l.get(r.index),n=t.channels()||0;for(let a=0;a<t.rows;a++)for(let i=0;i<t.cols;i++)e=e.length?`${e} L${t.intAt(a,i*n)},${t.intAt(a,i*n+1)}`:`M${t.intAt(a,i*n)},${t.intAt(a,i*n+1)}`;t.delete(),e=`${e} Z`,f.push({d:e,color:`rgb(${s(r.color[0])}, ${s(r.color[1])}, ${s(r.color[2])})`})}const h=[o.size().width,o.size().height];return l.delete(),d.delete(),o.delete(),r.delete(),{size:h,paths:f}}function isType(e,t){return e.type===t}const PARAMS={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:4,t:2,V:1,v:1,Z:0,z:0};class ParsedPath{constructor(e){this.COMMAND=0,this.NUMBER=1,this.EOD=2,this.segments=[],this.parseData(e),this.processPoints()}tokenize(e){const t=[];for(;''!==e;)if(e.match(/^([ \t\r\n,]+)/))e=e.substr(RegExp.$1.length);else if(e.match(/^([aAcChHlLmMqQsStTvVzZ])/))t[t.length]={type:this.COMMAND,text:RegExp.$1},e=e.substr(RegExp.$1.length);else if(e.match(/^(([-+]?[0-9]+(\.[0-9]*)?|[-+]?\.[0-9]+)([eE][-+]?[0-9]+)?)/))t[t.length]={type:this.NUMBER,text:`${parseFloat(RegExp.$1)}`},e=e.substr(RegExp.$1.length);else return console.error('Unrecognized segment command: '+e),[];return t[t.length]={type:this.EOD,text:''},t}parseData(e){const t=this.tokenize(e);let n=0,a=t[n],s='BOD';for(this.segments=[];!isType(a,this.EOD);){let r;const o=[];if(!('BOD'===s))isType(a,this.NUMBER)?r=PARAMS[s]:(n++,r=PARAMS[a.text],s=a.text);else if('M'===a.text||'m'===a.text)n++,r=PARAMS[a.text],s=a.text;else return void this.parseData('M0,0'+e);if(n+r<t.length){for(let e=n;e<n+r;e++){const n=t[e];if(isType(n,this.NUMBER))o[o.length]=+n.text;else return void console.error('Parameter type is not a number: '+s+','+n.text)}if('number'==typeof PARAMS[s]){const e={key:s,data:o};this.segments.push(e),n+=r,a=t[n],'M'===s&&(s='L'),'m'===s&&(s='l')}else return void console.error('Unsupported segment type: '+s)}else console.error('Path data ended before all parameters were found')}}get closed(){if('undefined'==typeof this._closed){this._closed=!1;for(const e of this.segments)'z'===e.key.toLowerCase()&&(this._closed=!0)}return this._closed}processPoints(){let e=null,t=[0,0];for(let n=0;n<this.segments.length;n++){const a=this.segments[n];switch(a.key){case'M':case'L':case'T':a.point=[a.data[0],a.data[1]];break;case'm':case'l':case't':a.point=[a.data[0]+t[0],a.data[1]+t[1]];break;case'H':a.point=[a.data[0],t[1]];break;case'h':a.point=[a.data[0]+t[0],t[1]];break;case'V':a.point=[t[0],a.data[0]];break;case'v':a.point=[t[0],a.data[0]+t[1]];break;case'z':case'Z':e&&(a.point=[e[0],e[1]]);break;case'C':a.point=[a.data[4],a.data[5]];break;case'c':a.point=[a.data[4]+t[0],a.data[5]+t[1]];break;case'S':a.point=[a.data[2],a.data[3]];break;case's':a.point=[a.data[2]+t[0],a.data[3]+t[1]];break;case'Q':a.point=[a.data[2],a.data[3]];break;case'q':a.point=[a.data[2]+t[0],a.data[3]+t[1]];break;case'A':a.point=[a.data[5],a.data[6]];break;case'a':a.point=[a.data[5]+t[0],a.data[6]+t[1]];}('m'===a.key||'M'===a.key)&&(e=null),a.point&&(t=a.point,!e&&(e=a.point)),('z'===a.key||'Z'===a.key)&&(e=null)}}}class RoughPath{constructor(e){this._position=[0,0],this._first=null,this.bezierReflectionPoint=null,this.quadReflectionPoint=null,this.parsed=new ParsedPath(e)}get segments(){return this.parsed.segments}get closed(){return this.parsed.closed}get linearPoints(){if(!this._linearPoints){const e=[];let t=[];for(const n of this.parsed.segments){const a=n.key.toLowerCase();('m'===a||'z'===a)&&(t.length&&(e.push(t),t=[]),'z'===a)||n.point&&t.push(n.point)}t.length&&(e.push(t),t=[]),this._linearPoints=e}return this._linearPoints}get first(){return this._first}set first(e){this._first=e}setPosition(e,t){this._position=[e,t],this._first||(this._first=[e,t])}get position(){return this._position}get x(){return this._position[0]}get y(){return this._position[1]}}class RoughArcConverter{constructor(e,t,n,a,i,s){var r=Math.sqrt,o=Math.sin,l=Math.abs,d=Math.PI;if(this._segIndex=0,this._numSegs=0,this._rx=0,this._ry=0,this._sinPhi=0,this._cosPhi=0,this._C=[0,0],this._theta=0,this._delta=0,this._T=0,this._from=e,e[0]===t[0]&&e[1]===t[1])return;const p=d/180;this._rx=l(n[0]),this._ry=l(n[1]),this._sinPhi=o(a*p),this._cosPhi=Math.cos(a*p);const f=this._cosPhi*(e[0]-t[0])/2+this._sinPhi*(e[1]-t[1])/2,h=-this._sinPhi*(e[0]-t[0])/2+this._cosPhi*(e[1]-t[1])/2;let c=0;const u=this._rx*this._rx*this._ry*this._ry-this._rx*this._rx*h*h-this._ry*this._ry*f*f;if(0>u){const e=r(1-u/(this._rx*this._rx*this._ry*this._ry));this._rx*=e,this._ry*=e,c=0}else c=(i===s?-1:1)*r(u/(this._rx*this._rx*h*h+this._ry*this._ry*f*f));const _=c*this._rx*h/this._ry,g=-c*this._ry*f/this._rx;this._C=[0,0],this._C[0]=this._cosPhi*_-this._sinPhi*g+(e[0]+t[0])/2,this._C[1]=this._sinPhi*_+this._cosPhi*g+(e[1]+t[1])/2,this._theta=this.calculateVectorAngle(1,0,(f-_)/this._rx,(h-g)/this._ry);let y=this.calculateVectorAngle((f-_)/this._rx,(h-g)/this._ry,(-f-_)/this._rx,(-h-g)/this._ry);!s&&0<y?y-=2*d:s&&0>y&&(y+=2*d),this._numSegs=Math.ceil(l(y/(d/2))),this._delta=y/this._numSegs,this._T=8/3*o(this._delta/4)*o(this._delta/4)/o(this._delta/2)}getNextSegment(){var e=Math.cos,t=Math.sin;if(this._segIndex===this._numSegs)return null;const n=e(this._theta),a=t(this._theta),i=this._theta+this._delta,s=e(i),r=t(i),o=[this._cosPhi*this._rx*s-this._sinPhi*this._ry*r+this._C[0],this._sinPhi*this._rx*s+this._cosPhi*this._ry*r+this._C[1]],l=[this._from[0]+this._T*(-this._cosPhi*this._rx*a-this._sinPhi*this._ry*n),this._from[1]+this._T*(-this._sinPhi*this._rx*a+this._cosPhi*this._ry*n)],d=[o[0]+this._T*(this._cosPhi*this._rx*r+this._sinPhi*this._ry*s),o[1]+this._T*(this._sinPhi*this._rx*r-this._cosPhi*this._ry*s)];return this._theta=i,this._from=[o[0],o[1]],this._segIndex++,{cp1:l,cp2:d,to:o}}calculateVectorAngle(e,t,n,a){var i=Math.atan2;const s=i(t,e),r=i(a,n);return r>=s?r-s:2*Math.PI-(s-r)}}class PathFitter{constructor(e,t){this.sets=e,this.closed=t}fit(e){const t=[];for(const n of this.sets){const a=n.length;let i=Math.floor(e*a);if(5>i){if(5>=a)continue;i=5}t.push(this.reduce(n,i))}let n='';for(const a of t){for(let e=0;e<a.length;e++){const t=a[e];n+=0===e?'M'+t[0]+','+t[1]:'L'+t[0]+','+t[1]}this.closed&&(n+='z ')}return n}distance(e,t){var n=Math.pow;return Math.sqrt(n(e[0]-t[0],2)+n(e[1]-t[1],2))}reduce(e,t){if(e.length<=t)return e;const n=e.slice(0);for(;n.length>t;){let e=-1,t=-1;for(let r=1;r<n.length-1;r++){const i=this.distance(n[r-1],n[r]),a=this.distance(n[r],n[r+1]),o=this.distance(n[r-1],n[r+1]),l=(i+a+o)/2,s=Math.sqrt(l*(l-i)*(l-a)*(l-o));(0>e||s<e)&&(e=s,t=r)}if(0<t)n.splice(t,1);else break}return n}}class Segment{constructor(e,t){var n=Number.MAX_VALUE;this.xi=n,this.yi=n,this.px1=e[0],this.py1=e[1],this.px2=t[0],this.py2=t[1],this.a=this.py2-this.py1,this.b=this.px1-this.px2,this.c=this.px2*this.py1-this.px1*this.py2,this._undefined=0===this.a&&0===this.b&&0===this.c}isUndefined(){return this._undefined}intersects(e){var t=Math.max,n=Math.min,i=Number.MAX_VALUE,s=Math.abs;if(this.isUndefined()||e.isUndefined())return!1;let r=i,o=i,l=0,d=0;const p=this.a,a=this.b,f=this.c;return(1e-5<s(a)&&(r=-p/a,l=-f/a),1e-5<s(e.b)&&(o=-e.a/e.b,d=-e.c/e.b),r===i)?o===i?-f/p==-e.c/e.a&&(this.py1>=n(e.py1,e.py2)&&this.py1<=t(e.py1,e.py2)?(this.xi=this.px1,this.yi=this.py1,!0):!!(this.py2>=n(e.py1,e.py2)&&this.py2<=t(e.py1,e.py2))&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=this.px1,this.yi=o*this.xi+d,!(-1e-5>(this.py1-this.yi)*(this.yi-this.py2)||-1e-5>(e.py1-this.yi)*(this.yi-e.py2))&&(!(1e-5>s(e.a))||!(-1e-5>(e.px1-this.xi)*(this.xi-e.px2)))):o===i?(this.xi=e.px1,this.yi=r*this.xi+l,!(-1e-5>(e.py1-this.yi)*(this.yi-e.py2)||-1e-5>(this.py1-this.yi)*(this.yi-this.py2))&&(!(1e-5>s(p))||!(-1e-5>(this.px1-this.xi)*(this.xi-this.px2)))):r===o?l==d&&(this.px1>=n(e.px1,e.px2)&&this.px1<=t(e.py1,e.py2)?(this.xi=this.px1,this.yi=this.py1,!0):!!(this.px2>=n(e.px1,e.px2)&&this.px2<=t(e.px1,e.px2))&&(this.xi=this.px2,this.yi=this.py2,!0)):(this.xi=(d-l)/(r-o),this.yi=r*this.xi+l,!(-1e-5>(this.px1-this.xi)*(this.xi-this.px2)||-1e-5>(e.px1-this.xi)*(this.xi-e.px2)))}}class HachureIterator{constructor(e,t,n,a,i,s,r,o){var l=Math.abs;this.deltaX=0,this.hGap=0,this.top=e,this.bottom=t,this.left=n,this.right=a,this.gap=i,this.sinAngle=s,this.tanAngle=o,1e-4>l(s)?this.pos=n+i:.9999<l(s)?this.pos=e+i:(this.deltaX=(t-e)*l(o),this.pos=n-l(this.deltaX),this.hGap=l(i/r),this.sLeft=new Segment([n,t],[n,e]),this.sRight=new Segment([a,t],[a,e]))}nextLine(){var e=Math.abs;if(1e-4>e(this.sinAngle)){if(this.pos<this.right){const e=[this.pos,this.top,this.pos,this.bottom];return this.pos+=this.gap,e}}else if(!(.9999<e(this.sinAngle))){let e=this.pos-this.deltaX/2,t=this.pos+this.deltaX/2,n=this.bottom,a=this.top;if(this.pos<this.right+this.deltaX){for(;e<this.left&&t<this.left||e>this.right&&t>this.right;)if(this.pos+=this.hGap,e=this.pos-this.deltaX/2,t=this.pos+this.deltaX/2,this.pos>this.right+this.deltaX)return null;const i=new Segment([e,n],[t,a]);this.sLeft&&i.intersects(this.sLeft)&&(e=i.xi,n=i.yi),this.sRight&&i.intersects(this.sRight)&&(t=i.xi,a=i.yi),0<this.tanAngle&&(e=this.right-(e-this.left),t=this.right-(t-this.left));const s=[e,n,t,a];return this.pos+=this.hGap,s}}else if(this.pos<this.bottom){const e=[this.left,this.pos,this.right,this.pos];return this.pos+=this.gap,e}return null}}function lineLength(e){var t=Math.pow;const n=e[0],a=e[1];return Math.sqrt(t(n[0]-a[0],2)+t(n[1]-a[1],2))}function getIntersectingLines(e,t){const n=[],a=new Segment([e[0],e[1]],[e[2],e[3]]);for(let s=0;s<t.length;s++){const e=new Segment(t[s],t[(s+1)%t.length]);a.intersects(e)&&n.push([a.xi,a.yi])}return n}function affine(e,t,n,a,i,s,r){return[-n*s-a*i+n+s*e+i*t,r*(n*i-a*s)+a+-r*i*e+r*s*t]}function hachureLinesForPolygon(e,t){var n=Math.max,a=Math.min;const s=[];if(e&&e.length){let r=e[0][0],o=e[0][0],l=e[0][1],d=e[0][1];for(let t=1;t<e.length;t++)r=a(r,e[t][0]),o=n(o,e[t][0]),l=a(l,e[t][1]),d=n(d,e[t][1]);const i=t.hachureAngle;let p=t.hachureGap;0>p&&(p=4*t.strokeWidth),p=n(p,.1);const f=Math.PI/180,h=i%180*f,c=Math.cos(h),u=Math.sin(h),_=Math.tan(h),g=new HachureIterator(l-1,d+1,r-1,o+1,p,u,c,_);for(let t;null!=(t=g.nextLine());){const n=getIntersectingLines(t,e);for(let e=0;e<n.length;e++)if(e<n.length-1){const t=n[e],a=n[e+1];s.push([t,a])}}}return s}function hachureLinesForEllipse(e,t,n,a,i,s){var r=Math.sqrt,o=Math.abs;const l=[];let d=o(n/2),p=o(a/2);d+=s.getOffset(.05*-d,.05*d,i),p+=s.getOffset(.05*-p,.05*p,i);const f=i.hachureAngle;let h=i.hachureGap;0>=h&&(h=4*i.strokeWidth);let c=i.fillWeight;0>c&&(c=i.strokeWidth/2);const u=Math.PI/180,_=Math.tan(f%180*u),g=p/d,y=r(g*_*g*_+1),m=g*_/y,x=1/y,v=h/(d*p/r(p*x*(p*x)+d*m*(d*m))/d);let b=r(d*d-(e-d+v)*(e-d+v));for(let o=e-d+v;o<e+d;o+=v){b=r(d*d-(e-o)*(e-o));const n=affine(o,t-b,e,t,m,x,g),a=affine(o,t+b,e,t,m,x,g);l.push([n,a])}return l}class HachureFiller{constructor(e){this.renderer=e}fillPolygon(e,t){return this._fillPolygon(e,t)}fillEllipse(e,t,n,a,i){return this._fillEllipse(e,t,n,a,i)}_fillPolygon(e,t,n=!1){const a=hachureLinesForPolygon(e,t),i=this.renderLines(a,t,n);return{type:'fillSketch',ops:i}}_fillEllipse(e,t,n,a,i,s=!1){const r=hachureLinesForEllipse(e,t,n,a,i,this.renderer),o=this.renderLines(r,i,s);return{type:'fillSketch',ops:o}}renderLines(e,t,n){let a=[],i=null;for(const s of e)a=a.concat(this.renderer.doubleLine(s[0][0],s[0][1],s[1][0],s[1][1],t)),n&&i&&(a=a.concat(this.renderer.doubleLine(i[0],i[1],s[0][0],s[0][1],t))),i=s[1];return a}}class ZigZagFiller extends HachureFiller{fillPolygon(e,t){return this._fillPolygon(e,t,!0)}fillEllipse(e,t,n,a,i){return this._fillEllipse(e,t,n,a,i,!0)}}class HatchFiller extends HachureFiller{fillPolygon(e,t){const n=this._fillPolygon(e,t),a=Object.assign({},t,{hachureAngle:t.hachureAngle+90}),i=this._fillPolygon(e,a);return n.ops=n.ops.concat(i.ops),n}fillEllipse(e,t,n,a,i){const s=this._fillEllipse(e,t,n,a,i),r=Object.assign({},i,{hachureAngle:i.hachureAngle+90}),o=this._fillEllipse(e,t,n,a,r);return s.ops=s.ops.concat(o.ops),s}}class DotFiller{constructor(e){this.renderer=e}fillPolygon(e,t){t=Object.assign({},t,{curveStepCount:4,hachureAngle:0});const n=hachureLinesForPolygon(e,t);return this.dotsOnLines(n,t)}fillEllipse(e,t,n,a,i){i=Object.assign({},i,{curveStepCount:4,hachureAngle:0});const s=hachureLinesForEllipse(e,t,n,a,i,this.renderer);return this.dotsOnLines(s,i)}dotsOnLines(e,t){let n=[],a=t.hachureGap;0>a&&(a=4*t.strokeWidth),a=Math.max(a,.1);let s=t.fillWeight;0>s&&(s=t.strokeWidth/2);for(const r of e){const e=lineLength(r),i=e/a,o=Math.ceil(i)-1,d=Math.atan((r[1][1]-r[0][1])/(r[1][0]-r[0][0]));for(let e=0;e<o;e++){const i=a*(e+1),o=i*Math.sin(d),l=i*Math.cos(d),p=[r[0][0]-l,r[0][1]+o],f=this.renderer.getOffset(p[0]-a/4,p[0]+a/4,t),h=this.renderer.getOffset(p[1]-a/4,p[1]+a/4,t),c=this.renderer.ellipse(f,h,s,s,t);n=n.concat(c.ops)}}return{type:'fillSketch',ops:n}}}const fillers={};function getFiller(e,t){let n=t.fillStyle||'hachure';if(!fillers[n])switch(n){case'zigzag':fillers[n]||(fillers[n]=new ZigZagFiller(e));break;case'cross-hatch':fillers[n]||(fillers[n]=new HatchFiller(e));break;case'dots':fillers[n]||(fillers[n]=new DotFiller(e));break;case'hachure':default:n='hachure',fillers[n]||(fillers[n]=new HachureFiller(e));}return fillers[n]}class RoughRenderer{line(e,t,n,a,i){const s=this.doubleLine(e,t,n,a,i);return{type:'path',ops:s}}linearPath(e,t,n){const a=(e||[]).length;if(2<a){let s=[];for(let t=0;t<a-1;t++)s=s.concat(this.doubleLine(e[t][0],e[t][1],e[t+1][0],e[t+1][1],n));return t&&(s=s.concat(this.doubleLine(e[a-1][0],e[a-1][1],e[0][0],e[0][1],n))),{type:'path',ops:s}}return 2===a?this.line(e[0][0],e[0][1],e[1][0],e[1][1],n):{type:'path',ops:[]}}polygon(e,t){return this.linearPath(e,!0,t)}rectangle(e,t,n,a,i){return this.polygon([[e,t],[e+n,t],[e+n,t+a],[e,t+a]],i)}curve(e,t){const n=this._curveWithOffset(e,1*(1+.2*t.roughness),t),a=this._curveWithOffset(e,1.5*(1+.22*t.roughness),t);return{type:'path',ops:n.concat(a)}}ellipse(e,t,n,a,i){var s=Math.abs;const r=2*Math.PI/i.curveStepCount;let o=s(n/2),l=s(a/2);o+=this.getOffset(.05*-o,.05*o,i),l+=this.getOffset(.05*-l,.05*l,i);const d=this._ellipse(r,e,t,o,l,1,r*this.getOffset(.1,this.getOffset(.4,1,i),i),i),p=this._ellipse(r,e,t,o,l,1.5,0,i);return{type:'path',ops:d.concat(p)}}arc(e,t,n,a,i,s,r,l,d){var o=Math.cos,p=Math.sin,f=Math.abs,h=Math.PI;const c=e,u=t;let _=f(n/2),g=f(a/2);_+=this.getOffset(.01*-_,.01*_,d),g+=this.getOffset(.01*-g,.01*g,d);let y=i,m=s;for(;0>y;)y+=2*h,m+=2*h;m-y>2*h&&(y=0,m=2*h);const x=2*h/d.curveStepCount,v=Math.min(x/2,(m-y)/2),b=this._arc(v,c,u,_,g,y,m,1,d),P=this._arc(v,c,u,_,g,y,m,1.5,d);let O=b.concat(P);return r&&(l?(O=O.concat(this.doubleLine(c,u,c+_*o(y),u+g*p(y),d)),O=O.concat(this.doubleLine(c,u,c+_*o(m),u+g*p(m),d))):(O.push({op:'lineTo',data:[c,u]}),O.push({op:'lineTo',data:[c+_*o(y),u+g*p(y)]}))),{type:'path',ops:O}}svgPath(e,t){e=(e||'').replace(/\n/g,' ').replace(/(-\s)/g,'-').replace('/(ss)/g',' ');let n=new RoughPath(e);if(t.simplification){const e=new PathFitter(n.linearPoints,n.closed),a=e.fit(t.simplification);n=new RoughPath(a)}let a=[];const r=n.segments||[];for(let o=0;o<r.length;o++){const e=r[o],i=0<o?r[o-1]:null,s=this._processSegment(n,e,i,t);s&&s.length&&(a=a.concat(s))}return{type:'path',ops:a}}solidFillPolygon(e,t){const n=[];if(e.length){const a=t.maxRandomnessOffset||0,s=e.length;if(2<s){n.push({op:'move',data:[e[0][0]+this.getOffset(-a,a,t),e[0][1]+this.getOffset(-a,a,t)]});for(let r=1;r<s;r++)n.push({op:'lineTo',data:[e[r][0]+this.getOffset(-a,a,t),e[r][1]+this.getOffset(-a,a,t)]})}}return{type:'fillPath',ops:n}}patternFillPolygon(e,t){const n=getFiller(this,t);return n.fillPolygon(e,t)}patternFillEllipse(e,t,n,a,i){const s=getFiller(this,i);return s.fillEllipse(e,t,n,a,i)}patternFillArc(e,t,n,a,i,s,r){var o=Math.cos,l=Math.sin,d=Math.abs,p=Math.PI;const f=e,h=t;let c=d(n/2),u=d(a/2);c+=this.getOffset(.01*-c,.01*c,r),u+=this.getOffset(.01*-u,.01*u,r);let _=i,g=s;for(;0>_;)_+=2*p,g+=2*p;g-_>2*p&&(_=0,g=2*p);const y=(g-_)/r.curveStepCount,m=[];for(let d=_;d<=g;d+=y)m.push([f+c*o(d),h+u*l(d)]);return m.push([f+c*o(g),h+u*l(g)]),m.push([f,h]),this.patternFillPolygon(m,r)}getOffset(e,t,n){return n.roughness*(Math.random()*(t-e)+e)}doubleLine(e,t,n,a,i){const s=this._line(e,t,n,a,i,!0,!1),r=this._line(e,t,n,a,i,!0,!0);return s.concat(r)}_line(e,t,n,a,i,s,r){var o=Math.pow;const l=o(e-n,2)+o(t-a,2);let d=i.maxRandomnessOffset||0;100*(d*d)>l&&(d=Math.sqrt(l)/10);const p=d/2,f=.2+.2*Math.random();let h=i.bowing*i.maxRandomnessOffset*(a-t)/200,c=i.bowing*i.maxRandomnessOffset*(e-n)/200;h=this.getOffset(-h,h,i),c=this.getOffset(-c,c,i);const u=[];return s&&(r?u.push({op:'move',data:[e+this.getOffset(-p,p,i),t+this.getOffset(-p,p,i)]}):u.push({op:'move',data:[e+this.getOffset(-d,d,i),t+this.getOffset(-d,d,i)]})),r?u.push({op:'bcurveTo',data:[h+e+(n-e)*f+this.getOffset(-p,p,i),c+t+(a-t)*f+this.getOffset(-p,p,i),h+e+2*(n-e)*f+this.getOffset(-p,p,i),c+t+2*(a-t)*f+this.getOffset(-p,p,i),n+this.getOffset(-p,p,i),a+this.getOffset(-p,p,i)]}):u.push({op:'bcurveTo',data:[h+e+(n-e)*f+this.getOffset(-d,d,i),c+t+(a-t)*f+this.getOffset(-d,d,i),h+e+2*(n-e)*f+this.getOffset(-d,d,i),c+t+2*(a-t)*f+this.getOffset(-d,d,i),n+this.getOffset(-d,d,i),a+this.getOffset(-d,d,i)]}),u}_curve(e,t,n){const a=e.length;let r=[];if(3<a){const o=[],l=1-n.curveTightness;r.push({op:'move',data:[e[1][0],e[1][1]]});for(let t=1;t+2<a;t++){const n=e[t];o[0]=[n[0],n[1]],o[1]=[n[0]+(l*e[t+1][0]-l*e[t-1][0])/6,n[1]+(l*e[t+1][1]-l*e[t-1][1])/6],o[2]=[e[t+1][0]+(l*e[t][0]-l*e[t+2][0])/6,e[t+1][1]+(l*e[t][1]-l*e[t+2][1])/6],o[3]=[e[t+1][0],e[t+1][1]],r.push({op:'bcurveTo',data:[o[1][0],o[1][1],o[2][0],o[2][1],o[3][0],o[3][1]]})}if(t&&2===t.length){const e=n.maxRandomnessOffset;r.push({op:'lineTo',data:[t[0]+this.getOffset(-e,e,n),t[1]+ +this.getOffset(-e,e,n)]})}}else 3===a?(r.push({op:'move',data:[e[1][0],e[1][1]]}),r.push({op:'bcurveTo',data:[e[1][0],e[1][1],e[2][0],e[2][1],e[2][0],e[2][1]]})):2===a&&(r=r.concat(this.doubleLine(e[0][0],e[0][1],e[1][0],e[1][1],n)));return r}_ellipse(e,t,n,a,i,s,r,l){var o=Math.cos,d=Math.sin,p=Math.PI;const f=this.getOffset(-.5,.5,l)-p/2,h=[];h.push([this.getOffset(-s,s,l)+t+.9*a*o(f-e),this.getOffset(-s,s,l)+n+.9*i*d(f-e)]);for(let c=f;c<2*p+f-.01;c+=e)h.push([this.getOffset(-s,s,l)+t+a*o(c),this.getOffset(-s,s,l)+n+i*d(c)]);return h.push([this.getOffset(-s,s,l)+t+a*o(f+2*p+.5*r),this.getOffset(-s,s,l)+n+i*d(f+2*p+.5*r)]),h.push([this.getOffset(-s,s,l)+t+.98*a*o(f+r),this.getOffset(-s,s,l)+n+.98*i*d(f+r)]),h.push([this.getOffset(-s,s,l)+t+.9*a*o(f+.5*r),this.getOffset(-s,s,l)+n+.9*i*d(f+.5*r)]),this._curve(h,null,l)}_curveWithOffset(e,t,n){const a=[[e[0][0]+this.getOffset(-t,t,n),e[0][1]+this.getOffset(-t,t,n)],[e[0][0]+this.getOffset(-t,t,n),e[0][1]+this.getOffset(-t,t,n)]];for(let s=1;s<e.length;s++)a.push([e[s][0]+this.getOffset(-t,t,n),e[s][1]+this.getOffset(-t,t,n)]),s===e.length-1&&a.push([e[s][0]+this.getOffset(-t,t,n),e[s][1]+this.getOffset(-t,t,n)]);return this._curve(a,null,n)}_arc(e,t,n,a,i,s,r,l,d){var o=Math.cos,p=Math.sin;const f=s+this.getOffset(-.1,.1,d),h=[];h.push([this.getOffset(-l,l,d)+t+.9*a*o(f-e),this.getOffset(-l,l,d)+n+.9*i*p(f-e)]);for(let c=f;c<=r;c+=e)h.push([this.getOffset(-l,l,d)+t+a*o(c),this.getOffset(-l,l,d)+n+i*p(c)]);return h.push([t+a*o(r),n+i*p(r)]),h.push([t+a*o(r),n+i*p(r)]),this._curve(h,null,d)}_bezierTo(e,t,n,a,s,r,l,d){const o=[],p=[d.maxRandomnessOffset||1,(d.maxRandomnessOffset||1)+.5];let h=[0,0];for(let f=0;2>f;f++)0===f?o.push({op:'move',data:[l.x,l.y]}):o.push({op:'move',data:[l.x+this.getOffset(-p[0],p[0],d),l.y+this.getOffset(-p[0],p[0],d)]}),h=[s+this.getOffset(-p[f],p[f],d),r+this.getOffset(-p[f],p[f],d)],o.push({op:'bcurveTo',data:[e+this.getOffset(-p[f],p[f],d),t+this.getOffset(-p[f],p[f],d),n+this.getOffset(-p[f],p[f],d),a+this.getOffset(-p[f],p[f],d),h[0],h[1]]});return l.setPosition(h[0],h[1]),o}_processSegment(e,t,n,a){let i=[];switch(t.key){case'M':case'm':{const n='m'===t.key;if(2<=t.data.length){let s=+t.data[0],r=+t.data[1];n&&(s+=e.x,r+=e.y);const o=1*(a.maxRandomnessOffset||0);s+=this.getOffset(-o,o,a),r+=this.getOffset(-o,o,a),e.setPosition(s,r),i.push({op:'move',data:[s,r]})}break}case'L':case'l':{const n='l'===t.key;if(2<=t.data.length){let s=+t.data[0],r=+t.data[1];n&&(s+=e.x,r+=e.y),i=i.concat(this.doubleLine(e.x,e.y,s,r,a)),e.setPosition(s,r)}break}case'H':case'h':{const n='h'===t.key;if(t.data.length){let s=+t.data[0];n&&(s+=e.x),i=i.concat(this.doubleLine(e.x,e.y,s,e.y,a)),e.setPosition(s,e.y)}break}case'V':case'v':{const n='v'===t.key;if(t.data.length){let s=+t.data[0];n&&(s+=e.y),i=i.concat(this.doubleLine(e.x,e.y,e.x,s,a)),e.setPosition(e.x,s)}break}case'Z':case'z':{e.first&&(i=i.concat(this.doubleLine(e.x,e.y,e.first[0],e.first[1],a)),e.setPosition(e.first[0],e.first[1]),e.first=null);break}case'C':case'c':{const n='c'===t.key;if(6<=t.data.length){let s=+t.data[0],r=+t.data[1],o=+t.data[2],l=+t.data[3],d=+t.data[4],p=+t.data[5];n&&(s+=e.x,o+=e.x,d+=e.x,r+=e.y,l+=e.y,p+=e.y);const f=this._bezierTo(s,r,o,l,d,p,e,a);i=i.concat(f),e.bezierReflectionPoint=[d+(d-o),p+(p-l)]}break}case'S':case's':{const s='s'===t.key;if(4<=t.data.length){let r=+t.data[0],o=+t.data[1],l=+t.data[2],d=+t.data[3];s&&(r+=e.x,l+=e.x,o+=e.y,d+=e.y);let p=r,f=o;const h=n?n.key:'';let c=null;('c'===h||'C'===h||'s'===h||'S'===h)&&(c=e.bezierReflectionPoint),c&&(p=c[0],f=c[1]);const u=this._bezierTo(p,f,r,o,l,d,e,a);i=i.concat(u),e.bezierReflectionPoint=[l+(l-r),d+(d-o)]}break}case'Q':case'q':{const n='q'===t.key;if(4<=t.data.length){let s=+t.data[0],r=+t.data[1],o=+t.data[2],l=+t.data[3];n&&(s+=e.x,o+=e.x,r+=e.y,l+=e.y);const d=1*(1+.2*a.roughness),p=1.5*(1+.22*a.roughness);i.push({op:'move',data:[e.x+this.getOffset(-d,d,a),e.y+this.getOffset(-d,d,a)]});let h=[o+this.getOffset(-d,d,a),l+this.getOffset(-d,d,a)];i.push({op:'qcurveTo',data:[s+this.getOffset(-d,d,a),r+this.getOffset(-d,d,a),h[0],h[1]]}),i.push({op:'move',data:[e.x+this.getOffset(-p,p,a),e.y+this.getOffset(-p,p,a)]}),h=[o+this.getOffset(-p,p,a),l+this.getOffset(-p,p,a)],i.push({op:'qcurveTo',data:[s+this.getOffset(-p,p,a),r+this.getOffset(-p,p,a),h[0],h[1]]}),e.setPosition(h[0],h[1]),e.quadReflectionPoint=[o+(o-s),l+(l-r)]}break}case'T':case't':{const s='t'===t.key;if(2<=t.data.length){let r=+t.data[0],o=+t.data[1];s&&(r+=e.x,o+=e.y);let l=r,d=o;const p=n?n.key:'';let h=null;('q'===p||'Q'===p||'t'===p||'T'===p)&&(h=e.quadReflectionPoint),h&&(l=h[0],d=h[1]);const c=1*(1+.2*a.roughness),u=1.5*(1+.22*a.roughness);i.push({op:'move',data:[e.x+this.getOffset(-c,c,a),e.y+this.getOffset(-c,c,a)]});let _=[r+this.getOffset(-c,c,a),o+this.getOffset(-c,c,a)];i.push({op:'qcurveTo',data:[l+this.getOffset(-c,c,a),d+this.getOffset(-c,c,a),_[0],_[1]]}),i.push({op:'move',data:[e.x+this.getOffset(-u,u,a),e.y+this.getOffset(-u,u,a)]}),_=[r+this.getOffset(-u,u,a),o+this.getOffset(-u,u,a)],i.push({op:'qcurveTo',data:[l+this.getOffset(-u,u,a),d+this.getOffset(-u,u,a),_[0],_[1]]}),e.setPosition(_[0],_[1]),e.quadReflectionPoint=[r+(r-l),o+(o-d)]}break}case'A':case'a':{const n='a'===t.key;if(7<=t.data.length){const s=+t.data[0],r=+t.data[1],o=+t.data[2],l=+t.data[3],d=+t.data[4];let p=+t.data[5],f=+t.data[6];if(n&&(p+=e.x,f+=e.y),p===e.x&&f===e.y)break;if(0==s||0==r)i=i.concat(this.doubleLine(e.x,e.y,p,f,a)),e.setPosition(p,f);else for(let t=0;1>t;t++){const t=new RoughArcConverter([e.x,e.y],[p,f],[s,r],o,!!l,!!d);for(let n=t.getNextSegment();n;){const s=this._bezierTo(n.cp1[0],n.cp1[1],n.cp2[0],n.cp2[1],n.to[0],n.to[1],e,a);i=i.concat(s),n=t.getNextSegment()}}}break}default:}return i}}const hasSelf='undefined'!=typeof self,roughScript=hasSelf&&self&&self.document&&self.document.currentScript&&self.document.currentScript.src;function createRenderer(e){if(hasSelf&&roughScript&&self&&self.workly&&e.async&&!e.noWorker){const t=e.worklyURL||'https://cdn.jsdelivr.net/gh/pshihn/workly/dist/workly.min.js';if(t){const e=`importScripts('${t}', '${roughScript}');\nworkly.expose(self.rough.createRenderer());`,n=URL.createObjectURL(new Blob([e]));return self.workly.proxy(n)}}return new RoughRenderer}const hasSelf$1='undefined'!=typeof self;class RoughGeneratorBase{constructor(e,t){this.defaultOptions={maxRandomnessOffset:2,roughness:1,bowing:1,stroke:'#000',strokeWidth:1,curveTightness:0,curveStepCount:9,fillStyle:'hachure',fillWeight:-1,hachureAngle:-41,hachureGap:-1},this.config=e||{},this.surface=t,this.renderer=createRenderer(this.config),this.config.options&&(this.defaultOptions=this._options(this.config.options))}_options(e){return e?Object.assign({},this.defaultOptions,e):this.defaultOptions}_drawable(e,t,n){return{shape:e,sets:t||[],options:n||this.defaultOptions}}get lib(){return this.renderer}getCanvasSize(){const e=e=>e&&'object'==typeof e&&e.baseVal&&e.baseVal.value?e.baseVal.value:e||100;return this.surface?[e(this.surface.width),e(this.surface.height)]:[100,100]}computePolygonSize(e){var t=Math.max,n=Math.min;if(e.length){let a=e[0][0],s=e[0][0],r=e[0][1],o=e[0][1];for(let l=1;l<e.length;l++)a=n(a,e[l][0]),s=t(s,e[l][0]),r=n(r,e[l][1]),o=t(o,e[l][1]);return[s-a,o-r]}return[0,0]}polygonPath(e){let t='';if(e.length){t=`M${e[0][0]},${e[0][1]}`;for(let n=1;n<e.length;n++)t=`${t} L${e[n][0]},${e[n][1]}`}return t}computePathSize(e){let t=[0,0];if(hasSelf$1&&self.document)try{const n=self.document.createElementNS('http://www.w3.org/2000/svg','svg');n.setAttribute('width','0'),n.setAttribute('height','0');const a=self.document.createElementNS('http://www.w3.org/2000/svg','path');a.setAttribute('d',e),n.appendChild(a),self.document.body.appendChild(n);const i=a.getBBox();i&&(t[0]=i.width||0,t[1]=i.height||0),self.document.body.removeChild(n)}catch(e){}const n=this.getCanvasSize();return t[0]*t[1]||(t=n),t}toPaths(e){var t=Math.round;const n=e.sets||[],a=e.options||this.defaultOptions,i=[];for(const s of n){let e=null;switch(s.type){case'path':e={d:this.opsToPath(s),stroke:a.stroke,strokeWidth:a.strokeWidth,fill:'none'};break;case'fillPath':e={d:this.opsToPath(s),stroke:'none',strokeWidth:0,fill:a.fill||'none'};break;case'fillSketch':e=this.fillSketch(s,a);break;case'path2Dfill':e={d:s.path||'',stroke:'none',strokeWidth:0,fill:a.fill||'none'};break;case'path2Dpattern':{const n=s.size,i={x:0,y:0,width:1,height:1,viewBox:`0 0 ${t(n[0])} ${t(n[1])}`,patternUnits:'objectBoundingBox',path:this.fillSketch(s,a)};e={d:s.path,stroke:'none',strokeWidth:0,pattern:i};break}}e&&i.push(e)}return i}fillSketch(e,t){let n=t.fillWeight;return 0>n&&(n=t.strokeWidth/2),{d:this.opsToPath(e),stroke:t.fill||'none',strokeWidth:n,fill:'none'}}opsToPath(e){let t='';for(const n of e.ops){const e=n.data;switch(n.op){case'move':t+=`M${e[0]} ${e[1]} `;break;case'bcurveTo':t+=`C${e[0]} ${e[1]}, ${e[2]} ${e[3]}, ${e[4]} ${e[5]} `;break;case'qcurveTo':t+=`Q${e[0]} ${e[1]}, ${e[2]} ${e[3]} `;break;case'lineTo':t+=`L${e[0]} ${e[1]} `;}}return t.trim()}}class RoughGenerator extends RoughGeneratorBase{constructor(e,t){super(e,t)}line(e,t,n,a,i){const s=this._options(i);return this._drawable('line',[this.lib.line(e,t,n,a,s)],s)}rectangle(e,t,n,a,i){const s=this._options(i),r=[];if(s.fill){const i=[[e,t],[e+n,t],[e+n,t+a],[e,t+a]];'solid'===s.fillStyle?r.push(this.lib.solidFillPolygon(i,s)):r.push(this.lib.patternFillPolygon(i,s))}return r.push(this.lib.rectangle(e,t,n,a,s)),this._drawable('rectangle',r,s)}ellipse(e,t,n,a,i){const s=this._options(i),r=[];if(s.fill)if('solid'===s.fillStyle){const i=this.lib.ellipse(e,t,n,a,s);i.type='fillPath',r.push(i)}else r.push(this.lib.patternFillEllipse(e,t,n,a,s));return r.push(this.lib.ellipse(e,t,n,a,s)),this._drawable('ellipse',r,s)}circle(e,t,n,a){const i=this.ellipse(e,t,n,n,a);return i.shape='circle',i}linearPath(e,t){const n=this._options(t);return this._drawable('linearPath',[this.lib.linearPath(e,!1,n)],n)}arc(e,t,n,a,i,s,r=!1,l){const d=this._options(l),o=[];if(r&&d.fill)if('solid'===d.fillStyle){const r=this.lib.arc(e,t,n,a,i,s,!0,!1,d);r.type='fillPath',o.push(r)}else o.push(this.lib.patternFillArc(e,t,n,a,i,s,d));return o.push(this.lib.arc(e,t,n,a,i,s,r,!0,d)),this._drawable('arc',o,d)}curve(e,t){const n=this._options(t);return this._drawable('curve',[this.lib.curve(e,n)],n)}polygon(e,t){const n=this._options(t),a=[];if(n.fill)if('solid'===n.fillStyle)a.push(this.lib.solidFillPolygon(e,n));else{const t=this.computePolygonSize(e),i=[[0,0],[t[0],0],[t[0],t[1]],[0,t[1]]],s=this.lib.patternFillPolygon(i,n);s.type='path2Dpattern',s.size=t,s.path=this.polygonPath(e),a.push(s)}return a.push(this.lib.linearPath(e,!0,n)),this._drawable('polygon',a,n)}path(e,t){const n=this._options(t),a=[];if(!e)return this._drawable('path',a,n);if(n.fill)if('solid'===n.fillStyle){a.push({type:'path2Dfill',path:e,ops:[]})}else{const t=this.computePathSize(e),i=[[0,0],[t[0],0],[t[0],t[1]],[0,t[1]]],s=this.lib.patternFillPolygon(i,n);s.type='path2Dpattern',s.size=t,s.path=e,a.push(s)}return a.push(this.lib.svgPath(e,n)),this._drawable('path',a,n)}}const hasDocument='undefined'!=typeof document;class RoughCanvasBase{constructor(e){this.canvas=e,this.ctx=this.canvas.getContext('2d')}static createRenderer(){return new RoughRenderer}draw(e){const t=e.sets||[],n=e.options||this.getDefaultOptions(),a=this.ctx;for(const i of t)switch(i.type){case'path':a.save(),a.strokeStyle=n.stroke,a.lineWidth=n.strokeWidth,this._drawToContext(a,i),a.restore();break;case'fillPath':a.save(),a.fillStyle=n.fill||'',this._drawToContext(a,i),a.restore();break;case'fillSketch':this.fillSketch(a,i,n);break;case'path2Dfill':{this.ctx.save(),this.ctx.fillStyle=n.fill||'';const e=new Path2D(i.path);this.ctx.fill(e),this.ctx.restore();break}case'path2Dpattern':{const e=this.canvas.ownerDocument||hasDocument&&document;if(e){const t=i.size,a=e.createElement('canvas'),s=a.getContext('2d'),r=this.computeBBox(i.path);r&&(r.width||r.height)?(a.width=this.canvas.width,a.height=this.canvas.height,s.translate(r.x||0,r.y||0)):(a.width=t[0],a.height=t[1]),this.fillSketch(s,i,n),this.ctx.save(),this.ctx.fillStyle=this.ctx.createPattern(a,'repeat');const o=new Path2D(i.path);this.ctx.fill(o),this.ctx.restore()}else console.error('Cannot render path2Dpattern. No defs/document defined.');break}}}computeBBox(e){if(hasDocument)try{const t=document.createElementNS('http://www.w3.org/2000/svg','svg');t.setAttribute('width','0'),t.setAttribute('height','0');const n=self.document.createElementNS('http://www.w3.org/2000/svg','path');n.setAttribute('d',e),t.appendChild(n),document.body.appendChild(t);const a=n.getBBox();return document.body.removeChild(t),a}catch(e){}return null}fillSketch(e,t,n){let a=n.fillWeight;0>a&&(a=n.strokeWidth/2),e.save(),e.strokeStyle=n.fill||'',e.lineWidth=a,this._drawToContext(e,t),e.restore()}_drawToContext(e,t){e.beginPath();for(const n of t.ops){const t=n.data;switch(n.op){case'move':e.moveTo(t[0],t[1]);break;case'bcurveTo':e.bezierCurveTo(t[0],t[1],t[2],t[3],t[4],t[5]);break;case'qcurveTo':e.quadraticCurveTo(t[0],t[1],t[2],t[3]);break;case'lineTo':e.lineTo(t[0],t[1]);}}'fillPath'===t.type?e.fill():e.stroke()}}class RoughCanvas extends RoughCanvasBase{constructor(e,t){super(e),this.gen=new RoughGenerator(t||null,this.canvas)}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}line(e,t,n,a,i){const s=this.gen.line(e,t,n,a,i);return this.draw(s),s}rectangle(e,t,n,a,i){const s=this.gen.rectangle(e,t,n,a,i);return this.draw(s),s}ellipse(e,t,n,a,i){const s=this.gen.ellipse(e,t,n,a,i);return this.draw(s),s}circle(e,t,n,a){const i=this.gen.circle(e,t,n,a);return this.draw(i),i}linearPath(e,t){const n=this.gen.linearPath(e,t);return this.draw(n),n}polygon(e,t){const n=this.gen.polygon(e,t);return this.draw(n),n}arc(e,t,n,a,i,s,r=!1,o){const l=this.gen.arc(e,t,n,a,i,s,r,o);return this.draw(l),l}curve(e,t){const n=this.gen.curve(e,t);return this.draw(n),n}path(e,t){const n=this.gen.path(e,t);return this.draw(n),n}}class FilePicker extends AnElement{static get properties(){return{label:String,hidePrefixLabel:String,browseLabel:String,accept:String}}constructor(){super(),this.label='Drop a file',this.hidePrefixLabel=!1,this.browseLabel='browse',this.file=null,this.dragOverListener=this.onDragOver.bind(this),this.dragLeaveListener=this.onDragLeave.bind(this),this.dragEndListener=this.onDragEnd.bind(this),this.dropListener=this.onDrop.bind(this)}_render(){const e=(this.file&&this.file.name||this.label||'Drop a file')+' or ',t=this.hidePrefixLabel?'hidden':'inline';return html$1`
    <style>
      :host {
        display: block;
        width: 100%;
        min-height: 40px;
        box-sizing: border-box;
        padding: 5px;
        border: 2px dashed rgba(0, 0, 0, 0.4);
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        -ms-flex-direction: column;
        -webkit-flex-direction: column;
        flex-direction: column;
        color: #777;
        letter-spacing: 0.03em;
        overflow: hidden;
      }
    
      :host(.dragging) {
        background-color: var(--highlight-pink);
      }
    
      .inline {
        display: inline-block;
        vertical-align: middle;
      }
    
      .flex {
        -ms-flex: 1 1 0.000000001px;
        -webkit-flex: 1;
        flex: 1;
        -webkit-flex-basis: 0.000000001px;
        flex-basis: 0.000000001px;
      }
    
      #nofile {
        text-align: center;
        word-break: break-word;
      }
    
      .fiContainer {
        display: inline-block;
        overflow: hidden;
        position: relative;
        cursor: pointer;
        color: var(--highlight-pink);
        border-bottom: 1px solid;
      }

      :host(.dragging) .fiContainer {
        color: inherit;
      }
    
      #fi {
        position: absolute;
        opacity: 0;
        top: 0;
        left: 0;
        bottom: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
      }
    
      .hidden {
        display: none;
      }
    </style>
    <div class="flex"></div>
    <div id="nofile">
      <span id="prefixLabel" class$="${t}">${e}</span>
      <div class="fiContainer inline">
        <label class="link">${this.browseLabel}</label>
        <input id="fi" type="file" accept$="${this.accept}" title="Browse files" on-change="${()=>this.fileChanged()}">
      </div>
    </div>
    <div id=""></div>
    <div class="flex"></div>
    `}connectedCallback(){super.connectedCallback(),this.attachDragListeners()}disconnectedCallback(){super.disconnectedCallback(),this.detachDragListeners()}attachDragListeners(){this.detachDragListeners(),this.addEventListener('dragover',this.dragOverListener),this.addEventListener('dragleave',this.dragLeaveListener),this.addEventListener('dragend',this.dragEndListener),this.addEventListener('drop',this.dropListener)}detachDragListeners(){this.removeEventListener('dragover',this.dragOverListener),this.removeEventListener('dragleave',this.dragLeaveListener),this.removeEventListener('dragend',this.dragEndListener),this.removeEventListener('drop',this.dropListener)}onDragOver(e){e.preventDefault(),this.classList.add('dragging')}onDragLeave(e){e.preventDefault(),this.classList.remove('dragging')}onDragEnd(e){this.classList.remove('dragging');const t=e.dataTransfer;if(t)if(t.items)for(let e=0;e<t.items.length;e++)t.items.remove(e);else e.dataTransfer.clearData()}onDrop(e){e.preventDefault(),this.classList.remove('dragging');const t=e.dataTransfer;t&&t.files&&t.files.length&&(this.file=t.files[0],this.requestRender(),this.fireEvent('files',{file:this.file}))}fileChanged(){this.file=(this.$('fi').files||[])[0],this.requestRender(),this.fireEvent('files',{file:this.file})}clear(){this.$('fi').value=null,this.file=null,this.requestRender()}}customElements.define('file-picker',FilePicker);const MAP_REF='__x_icon_map__';class AnIcon extends AnElement{static get properties(){return{icon:String}}_render({icon:e}){let t='';const n=e&&window[MAP_REF];return n&&(t=n[e]||''),html$1`
    <style>
      :host {
        display: -ms-inline-flexbox;
        display: -webkit-inline-flex;
        display: inline-flex;
        -ms-flex-align: center;
        -webkit-align-items: center;
        align-items: center;
        -ms-flex-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
        position: relative;
        vertical-align: middle;
        fill: currentColor;
        stroke: none;
        width: 24px;
        height: 24px;
      }
    
      svg {
        pointer-events: none;
        display: block;
        width: 100%;
        height: 100%;
      }
    </style>
    <svg viewBox="0 0 24 24" preserveAspectRatio="xMidYMid meet" focusable="false">
      <g>
        <path d$="${t}"></path>
      </g>
    </svg>
    `}}customElements.define('an-icon',AnIcon),window.__x_icon_map__={close:'M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z',"checkbox-filled":'M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z',"checkbox-unfilled":'M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z'};class CheckBox extends AnElement{static get properties(){return{checked:Boolean}}constructor(){super(),this.checked=!1}_render(){return html$1`
    <style>
      :host {
        display: block;
        font-family: inherit;
        font-weight: inherit;
        color: inherit;
        -moz-user-select: none;
        -ms-user-select: none;
        -webkit-user-select: none;
        user-select: none;
      }
    
      an-icon {
        cursor: pointer;
        display: inline-block;
        vertical-align: middle;
        color: var(--highlight-pink);
        margin-right: 5px;
      }
    
      span {
        display: inline;
        vertical-align: middle;
      }
    </style>
    <label on-click="${()=>this._toggle()}">
      <an-icon icon="${this.checked?'checkbox-filled':'checkbox-unfilled'}"></an-icon>
      <span>
        <slot></slot>
      </span>
    </label>
    `}_toggle(){this.checked=!this.checked,this.fireEvent('change',{checked:this.checked})}}customElements.define('check-box',CheckBox);class ControlPanel extends AnElement{_render({shapeCount:e,threshold:t,simplify:n,doublePass:a}){return html$1`
    <style>
      :host {
        text-align: left;
      }

      #controlPanel {
        max-width: 500px;
        margin: 0 auto;
      }

      label {
        display: block;
        margin: 10px 0;
      }

      label span {
        color: var(--highlight-pink);
      }

      input[type="range"] {
        width: 100%;
        box-sizing: border-box;
      }

      button {
        font-family: inherit;
        font-size: 15px;
        padding: 8px 15px;
        text-transform: uppercase;
        border: none;
        background: var(--highlight-blue);
        color: white;
        margin-top: 15px;
        border-radius: 3px;
        cursor: pointer;
        letter-spacing: 0.05em;
      }
      .message {
        margin-bottom: 20px;
        font-size: 14px;
      }
    </style>
    <div id="controlPanel">
      <div class="message">
        Adjust the threshold to get the best results for your image. (A threshold range from 90-150 provides the best results for most images.)
      </div>
      <label>
        Threshold
        <span id="thresholdValue"></span>
        <input id="threshold" type="range" min="0" max="250" step="1" value="110">
      </label>
      <label>
        Number of shapes
        <span id="shapeValue"></span>
        <input id="shapeCount" type="range" min="1" max="50" step="1" value="15">
      </label>
      <label>
        <check-box id="doublePass" checked>Double pass extraction</check-box>
      </label>
      <label>
        <check-box id="simplify" checked>Simplify shape</check-box>
      </label>
      <div>
        <button on-click="${()=>this.fireEvent('clear')}">Clear</button>
      </div>
    </div>
    `}_firstRendered(){this.shapeValue=this.$('shapeValue'),this.thresholdValue=this.$('thresholdValue'),this.shapeCount=this.$('shapeCount'),this.threshold=this.$('threshold'),this.doublePass=this.$('doublePass'),this.simplify=this.$('simplify'),this.$('controlPanel').addEventListener('input',this.debounce(this.onPanelChange,this.refreshLabels,250,!1,this)),this.$('controlPanel').addEventListener('change',this.debounce(this.onPanelChange,this.refreshLabels,250,!1,this)),this.refreshLabels()}refreshLabels(){this.shapeValue.textContent=`(${this.shapeCount.value})`,this.thresholdValue.textContent=`(${this.threshold.value})`}get settings(){return{shapeCount:+this.shapeCount.value,threshold:+this.threshold.value,simplify:this.simplify.checked,doublePass:this.doublePass.checked}}reset(){this.threshold.value=110,this.shapeCount.value=15,this.doublePass.checked=!0,this.simplify.checked=!0,this.refreshLabels()}onPanelChange(){this.refreshLabels(),this.fireEvent('update',this.settings)}debounce(e,t,n,a,i){let s=0;return()=>{const r=arguments,o=a&&!s;clearTimeout(s),s=window.setTimeout(()=>{s=0,a||e.apply(i,r)},n),o&&e.apply(i,r),t.apply(i,r)}}}customElements.define('control-panel',ControlPanel);class AppPanel extends AnElement{_render(){return html$1`
    <style>
      :host {
        position: relative;
      }
      #noFilePanel {
        padding: 20px 16px;
        margin: 0 auto;
        max-width: 500px;
      }
      #filePicker {
        color: white;
        border-color: rgba(255,255,255, 0.9);
        height: 150px;
      }
      #canvasPanel {
        padding: 20px 16px;
        margin: 0 auto;
        display: none;
      }
      #canvas {
        display: block;
        margin: 0 auto;
        max-width: 100%;
        box-sizing: border-box;
      }

      .hasFile #noFilePanel {
        display: none;
      }
      .hasFile #canvasPanel {
        display: block;
      }

      .subPanel {
        text-align: center;
        padding: 20px 0;
      }

      #originalSection, #canvasSection {
        overflow: hidden;
      }
      #img {
        display: block;
        box-sizing: border-box;
        max-width: 500px;
        max-height: 500px;
        margin: 0 auto;
      }
      #loadingPanel {
        padding: 20px 16px;
        text-align: center;
      }
    </style>
    <div id="main" style="display: none;">
      <div id="noFilePanel">
        <file-picker id="filePicker" on-files="${t=>this.onFiles(t)}"></file-picker>
        <div class="subPanel">
          <div class="message">
            Select an image to render it in a sketchy hand-drawn fashion.
          </div>
        </div>
      </div>
      <div id="canvasPanel">
        <div id="originalSection">
          <img id="img" on-load="${()=>this.onImageLoad()}">
        </div>
        <div id="canvasSection">
          <canvas id="canvas"></canvas>
        </div>
        <div class="subPanel">
          <control-panel on-update="${t=>this.onUpdate(t)}" on-clear="${()=>this.clearImage()}"></control-panel>
        </div>
      </div>
    </div>
    <div id="loadingPanel">Loading OpenCV module...</div>
    `}_firstRendered(){this.main=this.$('main'),this.originalSection=this.$('originalSection'),this.canvasSection=this.$('canvasSection'),this.canvas=this.$('canvas'),this.image=this.$('img'),this.controls=this.$$('control-panel'),this.filePicker=this.$('filePicker'),this.loadingPanel=this.$('loadingPanel'),window.opencvLoaded?this.openCVReady():window.addEventListener('opencv-load',()=>this.openCVReady())}openCVReady(){this.loadingPanel.style.display='none',this.main.style.display='block'}clearImage(){this.prevImageUrl&&URL.revokeObjectURL(this.prevImageUrl),this.prevImageUrl=null,this.filePicker.clear(),this.originalSection.style.height=0,this.canvasSection.style.height=0,this.main.classList.remove('hasFile'),this.controls.reset()}onFiles(t){const e=t.detail.file;0===e.type.indexOf('image/')&&this.loadImage(e)}loadImage(e){this.prevImageUrl&&URL.revokeObjectURL(this.prevImageUrl),this.prevImageUrl=URL.createObjectURL(e),this.image.src=this.prevImageUrl,this.originalSection.style.height=0,this.canvasSection.style.height=0,this.main.classList.add('hasFile')}onImageLoad(){this.originalSection.style.height='auto',this.canvasSection.style.height=0,this.redraw(this.controls.settings)}onUpdate(e){this.redraw(this.prevImageUrl&&e.detail)}async redraw(e){if(e){let t=await draw(this.image,e.shapeCount,e.threshold,!1,!1);this.canvas.width=t.size[0],this.canvas.height=t.size[1],this.canvas.getContext('2d').clearRect(0,0,t.size[0],t.size[1]),this.drawShapes(t,e.simplify),e.doublePass&&(t=await draw(this.image,e.shapeCount,e.threshold,!1,!0),this.drawShapes(t,e.simplify)),this.originalSection.style.height=0,this.canvasSection.style.height='auto'}}drawShapes(e,t){this.rc||(this.rc=new RoughCanvas(this.canvas,{options:{fillStyle:'hachure',fillWeight:3,stroke:'#777'}}));for(const n of e.paths){const e={fill:n.color,hachureAngle:Math.round(360*Math.random())};t&&(e.simplification=.1),this.rc.path(n.d,e)}}}customElements.define('app-panel',AppPanel);export{AppPanel};
